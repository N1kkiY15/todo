*,
h1,
h2,
::after,
::before { 
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

button { 
    border: none;
}

html { 
    background-color: rgb(229, 200, 255);
}

.container { 
    display: flex;
    flex-direction: column;
    width: 80%;
    align-items: center;
    margin: 0 auto;
    gap: 20px;
    font-family: arial, sans-serif;
    font-weight: 600;
}

h1 { 
    font-family: Arial, sans-serif;
    color: rgb(85, 142, 85);
    font-size: 3rem;
}

.modal__container { 
    display: flex;
    flex-direction: column;
    align-items: center;
    flex-direction: column;
    gap: 20px;
}

.form { 
    display: flex;
    flex-direction: column;
    width: 100%;    
    gap: 20px;
    justify-content: center;
}

.form-input { 
    padding: 10px 20px;
    border-radius: 15px;
    width: 100%;
    border: none;
}

.form-input:focus { 
    outline: none;
}   

.button_primary { 
    padding: 5px;
    border-radius: 5px;
    cursor: pointer;
}

.button { 
    width: 30px;
    height: 30px;
    background-color: inherit;
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
    cursor: pointer;
    border: none;
}

.button-close { 
    background-image: url('../assets/pictures/icons8-крестик-78.png');
}

.button-edit { 
    background-image: url('../assets/pictures/icons8-редактировать-50.png');
    width: 20px;
    height: 20px;
}

.blur-container { 
    position: absolute;
    width: 100vw;
    height: 100vh;
    top: 0;
    left: 0;
    display: flex;
    backdrop-filter: blur(5px);
}

.fade-enter-active,
.fade-leave-active {
  transition: opacity 0.5s ease;
}

.fade-enter-from,
.fade-leave-to {
  opacity: 0;
}

.visually-hidden { 
    clip: rect (0 0 0 0);
    clip-path: inset(50%);
    width: 1px;
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
}

.pseudo-checkbox {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 20px;
    height: 20px;
    border: 1px solid rgb(44, 43, 43);
    cursor: pointer;
}

input[type="checkbox"]:checked + .pseudo-checkbox::after {
  content: "✓";
}   
   
